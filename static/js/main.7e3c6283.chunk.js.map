{"version":3,"sources":["components/PictureCard/PictureCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["PictureCard","props","className","alt","name","src","image","onClick","clickPicture","id","Wrapper","shakeWrapper","pictures","App","state","cards","clickedArray","topScore","score","shakeit","message","shuffledArray","shuffleArray","setState","includes","concat","picturesArray","i","length","j","Math","floor","random","this","map","picture","key","href","target","rel","Component","ReactDOM","render","document","getElementById"],"mappings":"k5EAgBeA,G,YAbK,SAAAC,GAAK,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,+BACVC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,QAAS,kBAAMN,EAAMO,aAAaP,EAAMQ,WCLjCC,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAiC,SAArBD,EAAMU,aAAwB,eAAiB,WAAYV,EAAMW,Y,OCmF5FC,E,2MA/EbC,MAAQ,CACNC,QACAC,aAAc,GACdC,SAAU,EACVC,MAAO,EACPC,QAAS,QACTC,QAAS,6B,EAEXZ,aAAe,SAAAC,GACb,IAAMY,EAAgB,EAAKC,aAAaP,GACxC,EAAKQ,SAAS,CAAER,MAAOM,IACnB,EAAKP,MAAME,aAAaQ,SAASf,GACnC,EAAKc,SAAS,CACZL,MAAO,EACPF,aAAc,GACdI,QAAS,yDACTD,QAAS,SAGX,EAAKI,SAAS,CACZP,aAAc,EAAKF,MAAME,aAAaS,OAAO,CAAChB,IAC9CS,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BE,QAAS,aACTD,QAAS,UAGT,EAAKL,MAAMI,MAAQ,EAAKJ,MAAMG,UAChC,EAAKM,SAAS,CAAEN,SAAU,EAAKH,MAAMI,S,EAGzCI,aAAe,SAAAI,GACb,IAAK,IAAIC,EAAID,EAAcE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACjD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADO,EAEV,CACrCD,EAAcG,GACdH,EAAcC,IAFfD,EAAcC,GAFkC,KAE9BD,EAAcG,GAFgB,KAOnD,OAAOH,G,wEAEC,IAAD,OACP,OACE,yBAAKxB,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,qBAEF,wBAAIA,UAAU,aAAd,4EAGE,uBAAGA,UAAU,SACX,0CACU+B,KAAKnB,MAAMI,MADrB,gBACyCe,KAAKnB,MAAMG,WAGtD,uBAAGf,UAAU,WACX,gCAAS+B,KAAKnB,MAAMM,WAGxB,kBAAC,EAAD,CACET,aAAcsB,KAAKnB,MAAMK,QACzBP,SAAUqB,KAAKnB,MAAMC,MAAMmB,KAAI,SAAAC,GAAO,OACpC,kBAAC,EAAD,CACE3B,aAAc,EAAKA,aACnBC,GAAI0B,EAAQ1B,GACZ2B,IAAKD,EAAQ1B,GACbL,KAAM+B,EAAQ/B,KACdE,MAAO6B,EAAQ7B,aAInB,4BAAQJ,UAAU,UAChB,yBAAKA,UAAU,aACb,8BAAM,uBAAGmC,KAAK,wCAAwCnC,UAAU,0BAA0BoC,OAAO,SAASC,IAAI,uBAAxG,uB,GAzEFC,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7e3c6283.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./PictureCard.css\";\n\nconst PictureCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img\n        className=\"img-thumbnail img-responsive\"\n        alt={props.name}\n        src={props.image}\n        onClick={() => props.clickPicture(props.id)}\n      />\n    </div>\n  </div>\n);\n\nexport default PictureCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className= {props.shakeWrapper===\"true\" ? \"wrapperShake\" : \"wrapper\"}>{props.pictures}</div>;\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    clickedArray: [],\n    topScore: 0,\n    score: 0,\n    shakeit: \"false\",\n    message: \"CLICK an image to start! \"\n  };\n  clickPicture = id => {\n    const shuffledArray = this.shuffleArray(cards);\n    this.setState({ cards: shuffledArray });\n    if (this.state.clickedArray.includes(id)) {\n      this.setState({\n        score: 0,\n        clickedArray: [],\n        message: \"INCORRECT!! Game Over!! Click an image to start again!\",\n        shakeit: \"true\"\n      });\n    } else {\n      this.setState({\n        clickedArray: this.state.clickedArray.concat([id]),\n        score: this.state.score + 1,\n        message: \"CORRECT !!\",\n        shakeit: \"false\"\n      });\n    }\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n  };\n  shuffleArray = picturesArray => {\n    for (let i = picturesArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [picturesArray[i], picturesArray[j]] = [\n        picturesArray[j],\n        picturesArray[i]\n      ];\n    }\n    return picturesArray;\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Game of Clicks!!</h1>\n        </header>\n        <h3 className=\"App-intro\">\n            CLICK on an image to earn points, but don't click on any, more than\n            ONCE!\n          <p className=\"score\">\n            <strong>\n              Score: {this.state.score} | TopScore: {this.state.topScore}\n            </strong>\n          </p>\n          <p className=\"message\">\n            <strong>{this.state.message}</strong>\n          </p>\n        </h3>\n        <Wrapper\n          shakeWrapper={this.state.shakeit}\n          pictures={this.state.cards.map(picture => (\n            <PictureCard\n              clickPicture={this.clickPicture}\n              id={picture.id}\n              key={picture.id}\n              name={picture.name}\n              image={picture.image}\n            />\n          ))}\n        />\n          <footer className=\"footer\">\n            <div className=\"container\">\n              <span><a href=\"https://github.com/Zuprocj/clickygame\" className=\"btn btn-dark text-white\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repo</a></span>\n            </div>\n          </footer>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}